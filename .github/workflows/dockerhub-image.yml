name: DockerHub Image CI

on:
  push:
    branches: ["main", "dev", "staging"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install modules
        run: npm ci

      - name: Run lint fix
        run : npm run lintfix

      - name: Run linter
        run: npm run lint

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

      - name: Set some variables for the image
        run: |
          echo "IMAGE_VERSION=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          if [ ${{ steps.branch-name.outputs.is_default }} == "true" ]; then
            echo "IMAGE_NAME=latest" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${steps.branch-name.outputs.branch_name}" >> $GITHUB_ENV
          fi

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cc-web:${{ steps.branch-name.outputs.branch_name }}-${{ env.IMAGE_VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/cc-web:${{ env.IMAGE_NAME }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          build-args: BUILDX_QEMU_ENV=true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
